<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>infinispan-simple-tutorials-kubernetes</artifactId>
    <parent>
        <relativePath>../pom.xml</relativePath>
        <version>1.0.0-SNAPSHOT</version>
        <groupId>org.infinispan.tutorial.simple</groupId>
        <artifactId>infinispan-simple-tutorials</artifactId>
    </parent>
    <name>Infinispan Simple Tutorials: Kubernetes</name>

    <properties>
        <!-- Project name used in the OpenShift -->
        <fabric8.namespace>myproject</fabric8.namespace>
        <!-- This let's you debug a local container -->
        <options.debug>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787</options.debug>
        <!-- Not sure, what's your configuration, so let's use IPv4 just in case -->
        <options.useIPv4>-Djava.net.preferIPv4Stack=true</options.useIPv4>
    </properties>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <file>
                    <exists>/var/run/docker.sock</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>3.5.35</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>infinispan/${project.artifactId}:${project.version}</name>
                            <build>
                                <from>fabric8/s2i-java:2.0</from>
                                <assembly>
                                    <basedir>/deployments</basedir>
                                    <descriptorRef>artifact-with-dependencies</descriptorRef>
                                </assembly>
                                <ports>
                                    <!-- KUBE_PING requires exposing ping port -->
                                    <port>8888</port>
                                </ports>
                                <env>
                                    <!-- This is how we tell KUBE_PING in which project it should operate -->
                                    <OPENSHIFT_KUBE_PING_NAMESPACE>${fabric8.namespace}</OPENSHIFT_KUBE_PING_NAMESPACE>
                                    <JAVA_MAIN_CLASS>org.infinispan.tutorial.simple.kubernetes.InfinispanKubernetes</JAVA_MAIN_CLASS>
                                    <JAVA_OPTIONS>${options.debug} ${options.useIPv4}</JAVA_OPTIONS>
                                </env>
                            </build>
                        </image>
                    </images>
                    <!-- We are not interested in creating any services -->
                    <ignoreServices>true</ignoreServices>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cloud</artifactId>
        </dependency>
    </dependencies>
</project>
