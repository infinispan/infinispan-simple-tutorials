<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>infinispan-simple-tutorials-kubernetes</artifactId>
    <parent>
        <relativePath>../../pom.xml</relativePath>
        <version>1.0.0-SNAPSHOT</version>
        <groupId>org.infinispan.tutorial.simple</groupId>
        <artifactId>infinispan-simple-tutorials</artifactId>
    </parent>
    <name>Infinispan Simple Tutorials: Kubernetes</name>

    <properties>
        <!-- The FQN of the docker image used by the application -->
        <options.image>infinispan/${project.artifactId}:${project.version}</options.image>
        <!-- The name of the headless service used by DNS_PING to determine cluster members -->
        <options.service>myservice</options.service>
        <!-- Kubernetes namespace which the application is deployed to -->
        <options.namespace>myproject</options.namespace>
        <!-- Allows the container to be debugged -->
        <options.debug>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787</options.debug>
        <!-- Not sure, what's your configuration, so let's use IPv4 just in case -->
        <options.useIPv4>-Djava.net.preferIPv4Stack=true</options.useIPv4>
        <!-- This is how we tell JGroups DNS_PING which service it should use to resolve cluster members -->
        <options.dnsPing>-Djgroups.dns.query=${options.service}.${options.namespace}.svc.cluster.local</options.dnsPing>
    </properties>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <file>
                    <exists>/var/run/docker.sock</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jkube</groupId>
                        <artifactId>kubernetes-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.jkube</groupId>
                    <artifactId>kubernetes-maven-plugin</artifactId>
                    <version>1.17.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.infinispan.tutorial.simple.kubernetes.InfinispanKubernetes</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${options.image}</name>
                            <alias>infinispan</alias>
                            <build>
                                <from>registry.access.redhat.com/ubi9/openjdk-21-runtime</from>
                                <env>
                                    <JAVA_APP_JAR>/maven/${project.artifactId}-${project.version}.jar</JAVA_APP_JAR>
                                    <JAVA_OPTS>${options.debug} ${options.useIPv4} ${options.dnsPing}</JAVA_OPTS>
                                </env>
                            </build>
                        </image>
                    </images>
                    <namespace>${options.namespace}</namespace>
                    <resources>
                        <controller>
                            <controllerName>embedded-infinispan</controllerName>
                            <imagePullPolicy>Always</imagePullPolicy>
                            <replicas>2</replicas>
                        </controller>
                        <services>
                            <service>
                                <name>${options.service}</name>
                                <headless>true</headless>
                                <ports>
                                    <port>
                                        <port>8888</port>
                                        <targetPort>8888</targetPort>
                                    </port>
                                </ports>
                            </service>
                        </services>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>
    </dependencies>
</project>
